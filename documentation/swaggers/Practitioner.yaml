# this is an example of the Uber API
# as a demonstration of an API spec in YAML
swagger: '2.0'
info:
  title: Allwissend Microservices API
  description: Allwissend Practitioner API
  version: "1.0.0"

# the domain of the service

host: backend.application.dev

# array of all schemes that your API supports
schemes:
  - http
  - https

# will be prefixed to all paths
basePath: /v1

security:
  - internalApiKey: []

produces:
  - application/json

parameters:
  practitionerUuid:
    in: path
    name: practitionerUuid
    description: Unique identifier representing a specific practitioner that needs to be fetched
    required: true
    type: string
    format: uuid

paths:
  /practitioner:
    get:
      summary: Practitioners Types
      description: |
        The endpoint returns a list of *Practitioners*.
      tags:
        - Practitioners
      operationId: listPractitioner
      produces:
        - application/json
      security:
        - internalApiKey: []
      responses:
        200:
          description: An array of Practitioner
          schema:
            type: array
            items:
              $ref: '#/definitions/Practitioner'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Forbiden
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Resources Not Found
          schema:
            $ref: '#/definitions/Error'
        504:
          description: Gateway Timeout
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Practitioners Types
      description: |
        The endpoint returns a list of *Practitioners*.
      tags:
        - Practitioners
      operationId: savePractitioner
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Practitioner to be saved
          required: true
          schema:
            $ref: "#/definitions/Practitioner"
      responses:
        201:
          description: Created
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Forbiden
          schema:
            $ref: '#/definitions/Error'
        504:
          description: Gateway Timeout
          schema:
            $ref: '#/definitions/Error'


  /practitioner/findByStatus:
    get:
      summary: Practitioners Types
      description: |
        The endpoint returns a list of *Practitioners*.
      tags:
        - Practitioners
      operationId: listPractitionerByStatus
      produces:
        - application/json
      security:
        - internalApiKey: []
      parameters:
        - in: query
          name: status
          description: Status values that need to be considered for filter
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        200:
          description: An array of Practitioner
          schema:
            type: array
            items:
              $ref: '#/definitions/Practitioner'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Forbiden
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Resources Not Found
          schema:
            $ref: '#/definitions/Error'
        504:
          description: Gateway Timeout
          schema:
            $ref: '#/definitions/Error'

  /practitioner/findByTags:
    get:
      summary: Practitioners Types
      description: |
        The endpoint returns a list of *Practitioners*.
      tags:
        - Practitioners
      operationId: listPractitionerByTags
      produces:
        - application/json
      security:
        - internalApiKey: []
      parameters:
        - in: query
          name: tags
          description: Tags to filter by
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        200:
          description: An array of Practitioner
          schema:
            type: array
            items:
              $ref: '#/definitions/Practitioner'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Forbiden
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Resources Not Found
          schema:
            $ref: '#/definitions/Error'
        504:
          description: Gateway Timeout
          schema:
            $ref: '#/definitions/Error'

  /practitioner/findByTeam:
    get:
      summary: Practitioners Types
      description: |
        The endpoint returns a list of *Practitioners*.
      tags:
        - Practitioners
      operationId: listPractitionerByTeam
      produces:
        - application/json
      security:
        - internalApiKey: []
      parameters:
        - in: query
          name: team
          description: Teams to filter by
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        200:
          description: An array of Practitioner
          schema:
            type: array
            items:
              $ref: '#/definitions/Practitioner'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Forbiden
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Resources Not Found
          schema:
            $ref: '#/definitions/Error'
        504:
          description: Gateway Timeout
          schema:
            $ref: '#/definitions/Error'

  /practitioner/{practitionerUuid}:
    get:
      summary: Practitioner Type
      description: |
        The endpoint returns one *Practitioner* by your uuid.
      tags:
        - Practitioners
      operationId: getPractitionerByUuid
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/practitionerUuid'
      responses:
        200:
          description: An Practitioner
          schema:
            $ref: '#/definitions/Practitioner'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Forbiden
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Resources Not Found
          schema:
            $ref: '#/definitions/Error'
        504:
          description: Gateway Timeout
          schema:
            $ref: '#/definitions/Error'

    delete:
      summary: Practitioner Type
      description: |
        The endpoint returns one *Practitioner* by your uuid.
      tags:
        - Practitioners
      operationId: deletePractitionerByUuid
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/practitionerUuid'
      responses:
        202:
          description: Accepted
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Forbiden
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Resources Not Found
          schema:
            $ref: '#/definitions/Error'
        504:
          description: Gateway Timeout
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Practitioners Types
      description: |
        The endpoint returns a list of *Practitioners*.
      tags:
        - Practitioners
      operationId: updatePractitioner
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/practitionerUuid'
        - in: body
          name: body
          description: Practitioner to be updated
          required: true
          schema:
            $ref: "#/definitions/Practitioner"
      responses:
        202:
          description: Accepted
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Forbiden
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Resources Not Found
          schema:
            $ref: '#/definitions/Error'
        405:
          description: Invalid input
          schema:
            $ref: '#/definitions/Error'
        504:
          description: Gateway Timeout
          schema:
            $ref: '#/definitions/Error'

definitions:
  Practitioner:
    type: object
    properties:
      uuid:
        type: string
        format: uuid
        description: Unique identifier representing a specific practitioner.
      active:
        type: boolean
        description: To do
      name:
        $ref: '#/definitions/Name'
      gender:
        type: string
      birthDate:
        type: string
        format: datetime
      address:
        type: array
        minItems: 1
        items:
          $ref: '#/definitions/Address'
      qualification:
        type: array
        minItems: 1
        items:
          $ref: '#/definitions/Qualification'
      telecom:
        type: array
        minItems: 1
        items:
          $ref: '#/definitions/ContactPoint'
      photo:
        type: array
        minItems: 1
        items:
          $ref: '#/definitions/Attachment'
      cost:
        type: array
        minItems: 1
        items:
          $ref: '#/definitions/Cost'
      creation:
        type: string
        format: datetime
        description: Date practitioner was first created
      lastUpdated:
        type: string
        format: datetime
        description: Date practitioner was last updated

  Attachment:
    type: object
    properties:
      uuid:
        type: string
        format: uuid
        description: Unique identifier
      extension:
        type: string
        description: Additional Content defined by implementations
      contentType:
        type: string
        description: Mime type of the content, with charset etc.
      language:
        type: string
        description: Human language of the content (BCP-47)
      data:
        type: string
        format: base64Binary
        description: Data inline, base64ed
      url:
        type: string
        description: Uri where the data can be found
      size:
        type: integer
        format: int32
        minimum: 0
        description: Number of bytes of content (if url provided)
      hash:
        type: string
        format: base64Binary
        description: Hash of the data (sha-1, base64ed)
      title:
        type: string
        description: Label to display in place of the data
      creation:
        type: string
        format: datetime
        description: Date attachment was first created
      lastUpdated:
        type: string
        format: datetime
        description: Date attachment was last updated

  ContactPoint:
    type: object
    properties:
      uuid:
        type: string
        format: uuid
        description: Unique identifier
      system:
        type: string
        description: Telecommunications form for contact point - what communications system is required to make use of the contact.
        enum: [phone, fax, email, pager, url, sms, other]
      value:
        type: string
        description: The actual contact point details, in a form that is meaningful to the designated communication system (i.e. phone number or email address).
      use:
        type: string
        description: Identifies the purpose for the contact point. This is labeled as *Is Modifier* because applications should not mistake a temporary or old contact etc. for a current/permanent one. Applications can assume that a contact is current unless it explicitly says that it is temporary or old.
        enum: [home, work, temp, old, mobile]
      rank:
        type: integer
        format: int32
        description: Specify preferred order of use (1 = highest). Contacts are ranked with lower values coming before higher values.
        minimum: 1
      period:
        type: object
        description: Time period when contact was/is in use. Allows contact to be placed in historical context.
        properties:
          start:
            type: string
            format: datetime
          end:
            type: string
            format: datetime
      creation:
        type: string
        format: datetime
        description: Date telecom was first created
      lastUpdated:
        type: string
        format: datetime
        description: Date telecom was last updated


  Cost:
    type: object
    properties:
      uuid:
        type: string
        format: uuid
        description: Unique identifier
      status:
        type: string
        description: The status (active | suspended | inactive) property covers the general availability of the resource, not the current value which may be covered by the operationStatus, or by a schedule/slots if they are configured for the location.
        enum: [active, suspended, inactive]
      hourPrice:
        type: number
        format: double
        minimum: 0
        description: Valued Item fee, charge, or cost
      usePrice:
        type: number
        format: double
        minimum: 0
        description: Valued Item fee, charge, or cost
      unit:
        type: string
        description: USD, BRL, BTC, ETH
      period:
        type: object
        description: Time period when cost was/is in use. Allows cost to be placed in historical context.
        properties:
          start:
            type: string
            format: datetime
          end:
            type: string
            format: datetime
      creation:
        type: string
        format: datetime
        description: Date address was first created
      lastUpdated:
        type: string
        format: datetime
        description: Date address was last updated

  Name:
    type: object
    properties:
      uuid:
        type: string
        format: uuid
        description: Unique identifier
      alias:
        type: string
      first:
        type: string
      family:
        type: string
      given:
        type: array
        items:
          type: string
      prefix:
        type: array
        items:
          type: string
      suffix:
        type: array
        items:
          type: string
      creation:
        type: string
        format: datetime
        description: Date name was first created
      lastUpdated:
        type: string
        format: datetime
        description: Date name was last updated

  Address:
    type: object
    description: Base Structure Definition for Address Type. Allows to be record postal addresses, along with notes about their use. An address expressed using postal conventions (as opposed to GPS or other location definition formats).  This data type may be used to convey addresses for use in delivering mail as well as for visiting locations which might not be valid for mail delivery.  There are a variety of postal address formats defined around the world.
    properties:
      uuid:
        type: string
        format: uuid
        description: Unique identifier
      use:
        type: string
        description: The purpose (home | work | temp | old) of this address. This is labeled as *Is Modifier* because applications should not mistake a temporary or old address etc.for a current/permanent one. Applications can assume that an address is current unless it explicitly says that it is temporary or old.
        enum: [home, work, temp, old]
      type:
        type: string
        description: Distinguishes between physical addresses (those you can visit) and mailing addresses (e.g. PO Boxes and care-of addresses). Most addresses are both.
        enum: [postal, physical, both]
      line:
        type: array
        description: This component contains the house number, apartment number, street name, street direction,  P.O. Box number, delivery hints, and similar address information.
        items:
          type: string
      city:
        type: string
        description: The name of the city, town, village or other community or delivery center.
      district:
        type: string
        description: District is sometimes known as county, but in some regions 'county' is used in place of city (municipality), so county name should be conveyed in city instead.
      state:
        type: string
        description: Sub-unit of a country with limited sovereignty in a federally organized country. A code may be used if codes are in common use (i.e. US 2 letter state codes).
      country:
        type: string
        description: Country - a nation as commonly understood or generally accepted.
      postalCode:
        type: string
        description: A postal code designating a region defined by the postal service.
      period:
        type: object
        description: Time period when address was/is in use. Allows addresses to be placed in historical context.
        properties:
          start:
            type: string
            format: datetime
          end:
            type: string
            format: datetime
      creation:
        type: string
        format: datetime
        description: Date address was first created
      lastUpdated:
        type: string
        format: datetime
        description: Date address was last updated

  Qualification:
    type: object
    properties:
      uuid:
        type: string
        format: uuid
        description: Unique identifier
      code:
        type: string
      text:
        type: string
      period:
        type: object
        properties:
          start:
            type: string
          end:
            type: string
      issuer:
        type: string
      creation:
        type: string
        format: datetime
        description: Date qualification was first created
      lastUpdated:
        type: string
        format: datetime
        description: Date qualification was last updated
    required:
      - uuid
      - code
    example:
      uuid: 624b19de-0f4c-4eca-97b7-852daafc1934
      code: CD
      text: Descricao textual da Formacao

  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string

securityDefinitions:
  internalApiKey:
    type: apiKey
    in: header
    name: token
