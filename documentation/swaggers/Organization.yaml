# this is an example of the Uber API
# as a demonstration of an API spec in YAML
swagger: '2.0'
info:
  title: Allwissend Microservices API
  description: Move your app forward with the Uber API
  version: "1.0.0"

# the domain of the service

host: backend.application.dev

# array of all schemes that your API supports
schemes:
  - http
  - https

# will be prefixed to all paths
basePath: /v1

security:
  - internalApiKey: []

produces:
  - application/json

parameters:
  organizationUuid:
    in: path
    name: organizationUuid
    description: Unique identifier representing a specific organization that needs to be fetched
    required: true
    type: string
    format: uuid

  locationUuid:
    in: path
    name: locationUuid
    description: Unique identifier representing a specific loccation that needs to be fetched
    required: true
    type: string
    format: uuid

paths:
  /organization:
    get:
      summary: Lists all for the user Organization
      description: |
        The endpoint returns a list of *Organization*.
      tags:
        - Organization
      operationId: listOrganization
      produces:
        - application/json
      security:
        - internalApiKey: []
      responses:
        200:
          description: An array of Organization
          schema:
            type: array
            items:
              $ref: '#/definitions/Organization'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Forbiden
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Resources Not Found
          schema:
            $ref: '#/definitions/Error'
        504:
          description: Gateway Timeout
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Saves a new Organization
      description: |
        The endpoint save a new *Organization*.
      tags:
        - Organization
      operationId: saveOrganization
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Organization to be saved
          required: true
          schema:
            $ref: "#/definitions/Organization"
      responses:
        201:
          description: Created
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Forbiden
          schema:
            $ref: '#/definitions/Error'
        504:
          description: Gateway Timeout
          schema:
            $ref: '#/definitions/Error'


  /organization/findByStatus:
    get:
      summary: Organization
      description: |
        The endpoint returns a list of *Organization* by its current *Status*.
      tags:
        - Organization
      operationId: listOrganizationByStatus
      produces:
        - application/json
      security:
        - internalApiKey: []
      parameters:
        - in: query
          name: status
          description: Status values that need to be considered for filter
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        200:
          description: An array of Organization
          schema:
            type: array
            items:
              $ref: '#/definitions/Organization'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Forbiden
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Resources Not Found
          schema:
            $ref: '#/definitions/Error'
        504:
          description: Gateway Timeout
          schema:
            $ref: '#/definitions/Error'

  /organization/findByTags:
    get:
      summary: Organization
      description: |
        The endpoint returns a list of *Organization*.
      tags:
        - Organization
      operationId: listOrganizationByTags
      produces:
        - application/json
      security:
        - internalApiKey: []
      parameters:
        - in: query
          name: tags
          description: Tags to filter by
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        200:
          description: An array of Organization
          schema:
            type: array
            items:
              $ref: '#/definitions/Organization'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Forbiden
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Resources Not Found
          schema:
            $ref: '#/definitions/Error'
        504:
          description: Gateway Timeout
          schema:
            $ref: '#/definitions/Error'

  /organization/{organizationUuid}:
    get:
      summary: Organization
      description: |
        The endpoint returns one *Organization* by your uuid.
      tags:
        - Organization
      operationId: getOrganizationByUuid
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/organizationUuid'
      responses:
        200:
          description: An Organization
          schema:
            $ref: '#/definitions/Organization'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Forbiden
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Resources Not Found
          schema:
            $ref: '#/definitions/Error'
        504:
          description: Gateway Timeout
          schema:
            $ref: '#/definitions/Error'

    delete:
      summary: Organization
      description: |
        The endpoint returns one *Organization* by your uuid.
      tags:
        - Organization
      operationId: deleteOrganizationByUuid
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/organizationUuid'
      responses:
        202:
          description: Accepted
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Forbiden
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Resources Not Found
          schema:
            $ref: '#/definitions/Error'
        504:
          description: Gateway Timeout
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Organization Types
      description: |
        The endpoint returns a list of *Organization*.
      tags:
        - Organization
      operationId: updateOrganization
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/organizationUuid'
        - in: body
          name: body
          description: Organization to be updated
          required: true
          schema:
            $ref: "#/definitions/Organization"
      responses:
        202:
          description: Accepted
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Forbiden
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Resources Not Found
          schema:
            $ref: '#/definitions/Error'
        405:
          description: Invalid input
          schema:
            $ref: '#/definitions/Error'
        504:
          description: Gateway Timeout
          schema:
            $ref: '#/definitions/Error'


  /location:
    get:
      summary: Lists all for the user Location
      description: |
        The endpoint returns a list of *Location*.
      tags:
        - Location
      operationId: listLocation
      produces:
        - application/json
      security:
        - internalApiKey: []
      responses:
        200:
          description: An array of Location
          schema:
            type: array
            items:
              $ref: '#/definitions/Location'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Forbiden
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Resources Not Found
          schema:
            $ref: '#/definitions/Error'
        504:
          description: Gateway Timeout
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Saves a new Location
      description: |
        The endpoint save a new *Location*.
      tags:
        - Location
      operationId: saveLocation
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Location to be saved
          required: true
          schema:
            $ref: "#/definitions/Location"
      responses:
        201:
          description: Created
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Forbiden
          schema:
            $ref: '#/definitions/Error'
        504:
          description: Gateway Timeout
          schema:
            $ref: '#/definitions/Error'


  /location/findByStatus:
    get:
      summary: Location
      description: |
        The endpoint returns a list of *Location* by its current *Status*.
      tags:
        - Location
      operationId: listLocationByStatus
      produces:
        - application/json
      security:
        - internalApiKey: []
      parameters:
        - in: query
          name: status
          description: Status values that need to be considered for filter
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        200:
          description: An array of Location
          schema:
            type: array
            items:
              $ref: '#/definitions/Location'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Forbiden
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Resources Not Found
          schema:
            $ref: '#/definitions/Error'
        504:
          description: Gateway Timeout
          schema:
            $ref: '#/definitions/Error'

  /location/findByTags:
    get:
      summary: Location
      description: |
        The endpoint returns a list of *Location*.
      tags:
        - Location
      operationId: listLocationByTags
      produces:
        - application/json
      security:
        - internalApiKey: []
      parameters:
        - in: query
          name: tags
          description: Tags to filter by
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        200:
          description: An array of Location
          schema:
            type: array
            items:
              $ref: '#/definitions/Location'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Forbiden
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Resources Not Found
          schema:
            $ref: '#/definitions/Error'
        504:
          description: Gateway Timeout
          schema:
            $ref: '#/definitions/Error'

  /location/{locationUuid}:
    get:
      summary: Location
      description: |
        The endpoint returns one *Location* by your uuid.
      tags:
        - Location
      operationId: getLocationByUuid
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/locationUuid'
      responses:
        200:
          description: An Location
          schema:
            $ref: '#/definitions/Location'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Forbiden
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Resources Not Found
          schema:
            $ref: '#/definitions/Error'
        504:
          description: Gateway Timeout
          schema:
            $ref: '#/definitions/Error'

    delete:
      summary: Location
      description: |
        The endpoint returns one *Location* by your uuid.
      tags:
        - Location
      operationId: deleteLocationByUuid
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/locationUuid'
      responses:
        202:
          description: Accepted
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Forbiden
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Resources Not Found
          schema:
            $ref: '#/definitions/Error'
        504:
          description: Gateway Timeout
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Location Types
      description: |
        The endpoint returns a list of *Location*.
      tags:
        - Location
      operationId: updateLocation
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/locationUuid'
        - in: body
          name: body
          description: Location to be updated
          required: true
          schema:
            $ref: "#/definitions/Location"
      responses:
        202:
          description: Accepted
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Forbiden
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Resources Not Found
          schema:
            $ref: '#/definitions/Error'
        405:
          description: Invalid input
          schema:
            $ref: '#/definitions/Error'
        504:
          description: Gateway Timeout
          schema:
            $ref: '#/definitions/Error'


definitions:
  CodeableConcept:
    type: object
    required:
      - uuid
      - code
      - name
    properties:
      uuid:
        type: string
        format: uuid
        description: Unique identifier representing a specific codeable concept.
      code:
        type: string
      name:
        type: string
      description:
        type: string

  Organization:
    type: object
    required:
      - uuid
      - active
      - type
      - name
    description: A formally or informally recognized grouping of people or organizations formed for the purpose of achieving some form of collective action.  Includes companies, institutions, corporations, departments, community groups, healthcare practice groups, etc.
    properties:
      uuid:
        type: string
        format: uuid
        description: Unique identifier representing a specific practitioner.
      active:
        type: boolean
        description: Whether the organization's record is still in active use
      type:
        $ref: '#/definitions/CodeableConcept'
      name:
        type: string
        description: Name used for the organization
      alias:
        type: array
        description: Name used for the organization
        items:
          type: string
      telecom:
        type: array
        minItems: 1
        description: A contact detail for the organization
        items:
          $ref: '#/definitions/ContactPoint'
      address:
        type: array
        minItems: 1
        description: An address for the organization
        items:
          $ref: '#/definitions/Address'
      partOf:
        type: object
        minItems: 0
        maxItems: 1
        description: The organization of which this organization forms a part
        # $ref: '#/definitions/Organization'
      endpoint:
        type: string
        description: Technical endpoints providing access to services operated for the organization

  Position:
    type: object
    required:
      - uuid
      - longitude
      - latitude
    properties:
      uuid:
        type: string
        format: uuid
        description: Unique identifier representing a specific practitioner.
      longitude:
        type: number
        format: double
        description: Longitude with WGS84 datum. The value domain and the interpretation are the same as for the text of the longitude element in KML (see notes below).
      latitude:
        type: number
        format: double
        description: Latitude with WGS84 datum. The value domain and the interpretation are the same as for the text of the latitude element in KML (see notes below).
      altitude:
        type: number
        format: double
        description: Altitude with WGS84 datum. The value domain and the interpretation are the same as for the text of the altitude element in KML (see notes below).

  Location:
    type: object
    required:
      - uuid
      - status
      - name
      - identifier
    description: Details and position information for a physical place where services are provided  and resources and participants may be stored, found, contained or accommodated.
    properties:
      uuid:
        type: string
        format: uuid
        description: Unique identifier representing a specific location.
      identifier:
        type: string
        #$ref: '#/definitions/Identifier'
        description: Unique code or number identifying the location to its users
      status:
        type: string
        description: The status (active | suspended | inactive) property covers the general availability of the resource, not the current value which may be covered by the operationStatus, or by a schedule/slots if they are configured for the location.
        enum: [active, suspended, inactive]
      operationalStatus:
        type: string
        description: The Operational status of the location (typically only for a bed/room). The Operational status covers operation values most relevant to beds (but can also apply to rooms/units/chair/etc such as an isolation unit/dialisys chair). This typically covers concepts such as contamination, housekeeping and other activities like maintenance.
      name:
        type: string
        description: Name of the location as used by humans
      alias:
        type: array
        description: A list of alternate names that the location is known as, or was known as in the past
        items:
          type: string
      description:
        type: string
        description: Additional details about the location that could be displayed as further information to identify the location beyond its name
      mode:
        type: string
        description: Indicates whether (instance | kind) a resource instance represents a specific location or a class of locations.
        enum: [instance, kind]
      type:
        $ref: '#/definitions/CodeableConcept'
        # description: Indicates the type of function performed at the location.
      telecom:
        type: array
        minItems: 1
        items:
          $ref: '#/definitions/ContactPoint'
      address:
        type: array
        minItems: 0
        maxItems: 1
        items:
          $ref: '#/definitions/Address'
      physicalType:
        $ref: '#/definitions/CodeableConcept'
        # description: Physical form of the location, e.g. building, room, vehicle, road.
      position:
        $ref: '#/definitions/Position'
        #description: The absolute geographic location of the Location, expressed using the WGS84 datum (This is the same co-ordinate system used in KML). For mobile applications and automated route-finding knowing the exact location of the Location is required.
      managingOrganization:
        $ref: '#/definitions/Organization'
        # description: The organization responsible for the provisioning and upkeep of the location. This can also be used as the part of the organization hierarchy where this location provides services. These services can be defined through the HealthcareService resource.
      partOf:
        type: object
        minItems: 0
        maxItems: 1
        # $ref: '#/definitions/Location'
        description: Another Location which this Location is physically part of
      endpoint:
        type: string
        description: Technical endpoints providing access to services operated for the location. Organizations may have different systems at different locations that provide various services and need to be able to define the technical connection details for how to connect to them, and for what purpose.


  ContactPoint:
    type: object
    required:
      - uuid
      - system
      - value
      - use
    properties:
      uuid:
        type: string
        format: uuid
        description: Unique identifier
      system:
        type: string
      value:
        type: string
      use:
        type: string
      creation:
        type: string
        format: datetime
        description: Date telecom was first created
      lastUpdated:
        type: string
        format: datetime
        description: Date telecom was last updated




  Address:
    type: object
    required:
      - uuid
    properties:
      uuid:
        type: string
        format: uuid
        description: Unique identifier
      use:
        type: string
      line:
        type: array
        items:
          type: string
      city:
        type: string
      state:
        type: string
      country:
        type: string
      postalCode:
        type: string
      creation:
        type: string
        format: datetime
        description: Date address was first created
      lastUpdated:
        type: string
        format: datetime
        description: Date address was last updated



  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string

securityDefinitions:
  internalApiKey:
    type: apiKey
    in: header
    name: token
