{
  "swagger" : "2.0",
  "info" : {
    "description" : "Allwissend Team API",
    "version" : "1.0.0",
    "title" : "Allwissend Microservices API"
  },
  "host" : "backend.application.dev",
  "basePath" : "/v1",
  "schemes" : [ "http", "https" ],
  "produces" : [ "application/json" ],
  "security" : [ {
    "internalApiKey" : [ ]
  } ],
  "paths" : {
    "/team" : {
      "get" : {
        "tags" : [ "TeamQuery" ],
        "summary" : "List all teams for current user",
        "description" : "The endpoint returns a list of *Organization* by its current *Status*.\n",
        "operationId" : "listTeam",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "status",
          "in" : "query",
          "description" : "Status values that need to be considered for filter",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of Team",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Team"
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Forbiden",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Resources Not Found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "504" : {
            "description" : "Gateway Timeout",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "internalApiKey" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "TeamCommand" ],
        "summary" : "Saves a new Team",
        "description" : "The endpoint save a new *Team*.\n",
        "operationId" : "saveTeam",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Team to be saved",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Team"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Forbiden",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "504" : {
            "description" : "Gateway Timeout",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/team/findByStatus" : {
      "get" : {
        "tags" : [ "TeamQuery" ],
        "summary" : "List all teams for current user",
        "description" : "The endpoint returns a list of *Organization* by its current *Status*.\n",
        "operationId" : "listTeamByStatus",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "status",
          "in" : "query",
          "description" : "Status values that need to be considered for filter",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of Team",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Team"
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Forbiden",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Resources Not Found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "504" : {
            "description" : "Gateway Timeout",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "internalApiKey" : [ ]
        } ]
      }
    },
    "/team/{teamUuid}" : {
      "get" : {
        "tags" : [ "TeamQuery" ],
        "summary" : "Get a specific Team",
        "description" : "The endpoint returns one *Team* by your uuid.\n",
        "operationId" : "getTeamByUuid",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "teamUuid",
          "in" : "path",
          "description" : "Unique identifier representing a specific team that needs to be fetched",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "An Organization",
            "schema" : {
              "$ref" : "#/definitions/Team"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Forbiden",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Resources Not Found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "504" : {
            "description" : "Gateway Timeout",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "TeamCommand" ],
        "summary" : "Updates a Team type",
        "description" : "The endpoint returns a list of *Organization*.\n",
        "operationId" : "updateTeam",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "teamUuid",
          "in" : "path",
          "description" : "Unique identifier representing a specific team that needs to be fetched",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Organization to be updated",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Team"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted"
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Forbiden",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Resources Not Found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "405" : {
            "description" : "Invalid input",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "504" : {
            "description" : "Gateway Timeout",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "TeamCommand" ],
        "summary" : "Delte a Team type using its uuid",
        "description" : "The endpoint returns one *Team* by your uuid.\n",
        "operationId" : "deleteTeamByUuid",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "teamUuid",
          "in" : "path",
          "description" : "Unique identifier representing a specific team that needs to be fetched",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted"
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Forbiden",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Resources Not Found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "504" : {
            "description" : "Gateway Timeout",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/team/{teamUuid}/member" : {
      "post" : {
        "tags" : [ "PractitionerCommand" ],
        "summary" : "Add a new Member to a Team",
        "description" : "The endpoint save a new *Team*.\n",
        "operationId" : "addTeamMember",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "teamUuid",
          "in" : "path",
          "description" : "Unique identifier representing a specific team that needs to be fetched",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Team to be saved",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Member"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Forbiden",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "504" : {
            "description" : "Gateway Timeout",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/team/{teamUuid}/member/{practitionerUuid}" : {
      "put" : {
        "tags" : [ "PractitionerCommand" ],
        "summary" : "Updates a Member in a Team type",
        "description" : "The endpoint returns a list of *Organization*.\n",
        "operationId" : "updateTeamMember",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "teamUuid",
          "in" : "path",
          "description" : "Unique identifier representing a specific team that needs to be fetched",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "practitionerUuid",
          "in" : "path",
          "description" : "Unique identifier representing a specific practitioner that needs to be fetched",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Team to be saved",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Member"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted"
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Forbiden",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Resources Not Found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "405" : {
            "description" : "Invalid input",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "504" : {
            "description" : "Gateway Timeout",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "PractitionerCommand" ],
        "summary" : "Delete a Member from a Team type",
        "description" : "The endpoint returns a list of *Organization*.\n",
        "operationId" : "deleteTeamMember",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "teamUuid",
          "in" : "path",
          "description" : "Unique identifier representing a specific team that needs to be fetched",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "practitionerUuid",
          "in" : "path",
          "description" : "Unique identifier representing a specific practitioner that needs to be fetched",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted"
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Forbiden",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Resources Not Found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "504" : {
            "description" : "Gateway Timeout",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "securityDefinitions" : {
    "internalApiKey" : {
      "type" : "apiKey",
      "name" : "token",
      "in" : "header"
    }
  },
  "definitions" : {
    "Team" : {
      "type" : "object",
      "properties" : {
        "uuid" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Unique identifier representing a specific Team in a Organization"
        },
        "code" : {
          "type" : "string",
          "description" : "Code thats identifier the Team in human friendly format"
        },
        "status" : {
          "type" : "string",
          "description" : "Status...",
          "enum" : [ "working", "stopped", "loss" ]
        },
        "name" : {
          "type" : "string",
          "description" : "Team name."
        },
        "defaultLocation" : {
          "$ref" : "#/definitions/Location"
        },
        "currentLocation" : {
          "$ref" : "#/definitions/Location"
        },
        "members" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Member"
          },
          "minItems" : 1
        }
      },
      "description" : "Team?!",
      "example" : {
        "code" : "code",
        "members" : [ {
          "period" : {
            "start" : "start",
            "end" : "end"
          },
          "practitioner" : {
            "name" : {
              "given" : [ "given", "given" ],
              "lastUpdated" : "lastUpdated",
              "prefix" : [ "prefix", "prefix" ],
              "alias" : "alias",
              "family" : "family",
              "suffix" : [ "suffix", "suffix" ],
              "uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "first" : "first",
              "creation" : "creation"
            },
            "active" : true,
            "photo" : [ {
              "lastUpdated" : "lastUpdated",
              "extension" : "extension",
              "data" : "data",
              "size" : 0,
              "language" : "language",
              "title" : "title",
              "uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "contentType" : "contentType",
              "url" : "url",
              "hash" : "hash",
              "creation" : "creation"
            }, {
              "lastUpdated" : "lastUpdated",
              "extension" : "extension",
              "data" : "data",
              "size" : 0,
              "language" : "language",
              "title" : "title",
              "uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "contentType" : "contentType",
              "url" : "url",
              "hash" : "hash",
              "creation" : "creation"
            } ],
            "uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
          },
          "type" : "permanent",
          "uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "status" : "evaluation"
        }, {
          "period" : {
            "start" : "start",
            "end" : "end"
          },
          "practitioner" : {
            "name" : {
              "given" : [ "given", "given" ],
              "lastUpdated" : "lastUpdated",
              "prefix" : [ "prefix", "prefix" ],
              "alias" : "alias",
              "family" : "family",
              "suffix" : [ "suffix", "suffix" ],
              "uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "first" : "first",
              "creation" : "creation"
            },
            "active" : true,
            "photo" : [ {
              "lastUpdated" : "lastUpdated",
              "extension" : "extension",
              "data" : "data",
              "size" : 0,
              "language" : "language",
              "title" : "title",
              "uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "contentType" : "contentType",
              "url" : "url",
              "hash" : "hash",
              "creation" : "creation"
            }, {
              "lastUpdated" : "lastUpdated",
              "extension" : "extension",
              "data" : "data",
              "size" : 0,
              "language" : "language",
              "title" : "title",
              "uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
              "contentType" : "contentType",
              "url" : "url",
              "hash" : "hash",
              "creation" : "creation"
            } ],
            "uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
          },
          "type" : "permanent",
          "uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "status" : "evaluation"
        } ],
        "name" : "name",
        "uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
        "defaultLocation" : {
          "operationalStatus" : "operationalStatus",
          "identifier" : "identifier",
          "name" : "name",
          "alias" : [ "alias", "alias" ],
          "type" : {
            "code" : "code",
            "name" : "name",
            "description" : "description",
            "uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
          },
          "uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "status" : "active"
        },
        "status" : "working",
        "currentLocation" : {
          "operationalStatus" : "operationalStatus",
          "identifier" : "identifier",
          "name" : "name",
          "alias" : [ "alias", "alias" ],
          "type" : {
            "code" : "code",
            "name" : "name",
            "description" : "description",
            "uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
          },
          "uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "status" : "active"
        }
      }
    },
    "Member" : {
      "type" : "object",
      "properties" : {
        "uuid" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Unique identifier representing a specific member"
        },
        "period" : {
          "$ref" : "#/definitions/Period"
        },
        "practitioner" : {
          "$ref" : "#/definitions/Practitioner"
        },
        "type" : {
          "type" : "string",
          "description" : "type....",
          "enum" : [ "permanent", "temporary", "loaned", "outsourced", "rented" ]
        },
        "status" : {
          "type" : "string",
          "description" : "Status...",
          "enum" : [ "evaluation", "not_started", "in_hiring", "in_training", "absent", "lunch", "present", "loaned", "working", "stopped", "loss", "injured", "away" ]
        }
      },
      "description" : "Member?!",
      "example" : {
        "period" : {
          "start" : "start",
          "end" : "end"
        },
        "practitioner" : {
          "name" : {
            "given" : [ "given", "given" ],
            "lastUpdated" : "lastUpdated",
            "prefix" : [ "prefix", "prefix" ],
            "alias" : "alias",
            "family" : "family",
            "suffix" : [ "suffix", "suffix" ],
            "uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
            "first" : "first",
            "creation" : "creation"
          },
          "active" : true,
          "photo" : [ {
            "lastUpdated" : "lastUpdated",
            "extension" : "extension",
            "data" : "data",
            "size" : 0,
            "language" : "language",
            "title" : "title",
            "uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
            "contentType" : "contentType",
            "url" : "url",
            "hash" : "hash",
            "creation" : "creation"
          }, {
            "lastUpdated" : "lastUpdated",
            "extension" : "extension",
            "data" : "data",
            "size" : 0,
            "language" : "language",
            "title" : "title",
            "uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
            "contentType" : "contentType",
            "url" : "url",
            "hash" : "hash",
            "creation" : "creation"
          } ],
          "uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
        },
        "type" : "permanent",
        "uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
        "status" : "evaluation"
      }
    },
    "Practitioner" : {
      "type" : "object",
      "properties" : {
        "uuid" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Unique identifier representing a specific practitioner."
        },
        "active" : {
          "type" : "boolean",
          "description" : "To do"
        },
        "name" : {
          "$ref" : "#/definitions/Name"
        },
        "photo" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Attachment"
          },
          "minItems" : 1
        }
      },
      "example" : {
        "name" : {
          "given" : [ "given", "given" ],
          "lastUpdated" : "lastUpdated",
          "prefix" : [ "prefix", "prefix" ],
          "alias" : "alias",
          "family" : "family",
          "suffix" : [ "suffix", "suffix" ],
          "uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "first" : "first",
          "creation" : "creation"
        },
        "active" : true,
        "photo" : [ {
          "lastUpdated" : "lastUpdated",
          "extension" : "extension",
          "data" : "data",
          "size" : 0,
          "language" : "language",
          "title" : "title",
          "uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "contentType" : "contentType",
          "url" : "url",
          "hash" : "hash",
          "creation" : "creation"
        }, {
          "lastUpdated" : "lastUpdated",
          "extension" : "extension",
          "data" : "data",
          "size" : 0,
          "language" : "language",
          "title" : "title",
          "uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
          "contentType" : "contentType",
          "url" : "url",
          "hash" : "hash",
          "creation" : "creation"
        } ],
        "uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
      }
    },
    "Attachment" : {
      "type" : "object",
      "properties" : {
        "uuid" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Unique identifier"
        },
        "extension" : {
          "type" : "string",
          "description" : "Additional Content defined by implementations"
        },
        "contentType" : {
          "type" : "string",
          "description" : "Mime type of the content, with charset etc."
        },
        "language" : {
          "type" : "string",
          "description" : "Human language of the content (BCP-47)"
        },
        "data" : {
          "type" : "string",
          "format" : "base64Binary",
          "description" : "Data inline, base64ed"
        },
        "url" : {
          "type" : "string",
          "description" : "Uri where the data can be found"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of bytes of content (if url provided)",
          "minimum" : 0
        },
        "hash" : {
          "type" : "string",
          "format" : "base64Binary",
          "description" : "Hash of the data (sha-1, base64ed)"
        },
        "title" : {
          "type" : "string",
          "description" : "Label to display in place of the data"
        },
        "creation" : {
          "type" : "string",
          "format" : "datetime",
          "description" : "Date attachment was first created"
        },
        "lastUpdated" : {
          "type" : "string",
          "format" : "datetime",
          "description" : "Date attachment was last updated"
        }
      },
      "example" : {
        "lastUpdated" : "lastUpdated",
        "extension" : "extension",
        "data" : "data",
        "size" : 0,
        "language" : "language",
        "title" : "title",
        "uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
        "contentType" : "contentType",
        "url" : "url",
        "hash" : "hash",
        "creation" : "creation"
      }
    },
    "Name" : {
      "type" : "object",
      "properties" : {
        "uuid" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Unique identifier"
        },
        "alias" : {
          "type" : "string"
        },
        "first" : {
          "type" : "string"
        },
        "family" : {
          "type" : "string"
        },
        "given" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "prefix" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "suffix" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "creation" : {
          "type" : "string",
          "format" : "datetime",
          "description" : "Date name was first created"
        },
        "lastUpdated" : {
          "type" : "string",
          "format" : "datetime",
          "description" : "Date name was last updated"
        }
      },
      "example" : {
        "given" : [ "given", "given" ],
        "lastUpdated" : "lastUpdated",
        "prefix" : [ "prefix", "prefix" ],
        "alias" : "alias",
        "family" : "family",
        "suffix" : [ "suffix", "suffix" ],
        "uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
        "first" : "first",
        "creation" : "creation"
      }
    },
    "CodeableConcept" : {
      "type" : "object",
      "required" : [ "code", "name", "uuid" ],
      "properties" : {
        "uuid" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Unique identifier representing a specific codeable concept."
        },
        "code" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      },
      "example" : {
        "code" : "code",
        "name" : "name",
        "description" : "description",
        "uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
      }
    },
    "Period" : {
      "type" : "object",
      "properties" : {
        "start" : {
          "type" : "string",
          "format" : "datetime"
        },
        "end" : {
          "type" : "string",
          "format" : "datetime"
        }
      },
      "description" : "Time period when contact was/is in use. Allows contact to be placed in historical context.",
      "example" : {
        "start" : "start",
        "end" : "end"
      }
    },
    "Location" : {
      "type" : "object",
      "required" : [ "identifier", "name", "status", "uuid" ],
      "properties" : {
        "uuid" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Unique identifier representing a specific location."
        },
        "identifier" : {
          "type" : "string",
          "description" : "Unique code or number identifying the location to its users"
        },
        "status" : {
          "type" : "string",
          "description" : "The status (active | suspended | inactive) property covers the general availability of the resource, not the current value which may be covered by the operationStatus, or by a schedule/slots if they are configured for the location.",
          "enum" : [ "active", "suspended", "inactive" ]
        },
        "operationalStatus" : {
          "type" : "string",
          "description" : "The Operational status of the location (typically only for a bed/room). The Operational status covers operation values most relevant to beds (but can also apply to rooms/units/chair/etc such as an isolation unit/dialisys chair). This typically covers concepts such as contamination, housekeeping and other activities like maintenance."
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the location as used by humans"
        },
        "alias" : {
          "type" : "array",
          "description" : "A list of alternate names that the location is known as, or was known as in the past",
          "items" : {
            "type" : "string"
          }
        },
        "type" : {
          "$ref" : "#/definitions/CodeableConcept"
        }
      },
      "description" : "Details and position information for a physical place where services are provided  and resources and participants may be stored, found, contained or accommodated.",
      "example" : {
        "operationalStatus" : "operationalStatus",
        "identifier" : "identifier",
        "name" : "name",
        "alias" : [ "alias", "alias" ],
        "type" : {
          "code" : "code",
          "name" : "name",
          "description" : "description",
          "uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
        },
        "uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
        "status" : "active"
      }
    },
    "Error" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "type" : "string"
        },
        "fields" : {
          "type" : "string"
        }
      }
    }
  },
  "parameters" : {
    "practitionerUuid" : {
      "name" : "practitionerUuid",
      "in" : "path",
      "description" : "Unique identifier representing a specific practitioner that needs to be fetched",
      "required" : true,
      "type" : "string",
      "format" : "uuid"
    },
    "teamUuid" : {
      "name" : "teamUuid",
      "in" : "path",
      "description" : "Unique identifier representing a specific team that needs to be fetched",
      "required" : true,
      "type" : "string",
      "format" : "uuid"
    }
  }
}
